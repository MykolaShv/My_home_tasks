UPDATE
Позволяет изменять с помощью UPDATE данные во всех, либо только перечисленных, столбцах в заданной таблице, 
представлении и т. п. (На практике для любой нетривиальной команды UPDATE потребуется и право SELECT, 
так как она должна обратиться к столбцам таблицы, чтобы определить, какие строки подлежат изменению, 
и/или вычислить новые значения столбцов.) Для SELECT ... FOR UPDATE и SELECT ... FOR SHARE также 
требуется иметь это право как минимум для одного столбца, помимо права SELECT. Для последовательностей 
это право позволяет пользоваться функциями nextval и setval. Для больших объектов это право позволяет 
записывать данные в объект или обрезать его.

Синтаксис
Синтаксис для оператора UPDATE при обновлении таблицы в SQL.
UPDATE table
SET column1 = expression1,
    column2 = expression2,
    ...
[WHERE conditions];
Или
Синтаксис SQL оператора UPDATE при обновлении таблицы данными из другой таблицы:
UPDATE table1
   SET column1 = (SELECT expression1
                 FROM table2
                WHERE conditions)
[WHERE conditions];
Или
Синтаксис SQL оператора UPDATE при обновлении нескольких таблиц (не разрешен в Oracle):
UPDATE table1, table2, ...
   SET column1 = expression1,
       column2 = expression2,
     ...
 WHERE table1.column = table2.column
[AND conditions];

Параметры или аргументы
column1, column2
Столбцы, которые вы хотите обновить
expression1, expression2
Это новые значения, назначаемые column1, column2. Поэтому column1 будет присвоено значение expression1,
 а column2 будет присвоено значение expression2 и т.д.
WHERE conditions
Необязательный. Условия, которые должны быть выполнены, чтобы выполнить обновление. Если никаких условий 
не предусмотрено, то все записи в таблице будут обновлены
Дополнительное условие, описываемое в операторе SQL WHERE, помогает более гибко совершать манипуляции данными.

postgres=# UPDATE word SET vocabulary_id = 6  WHERE  word = 'IP';
UPDATE 1
postgres=# select * from word;
 id |   word   | vocabulary_id
----+----------+---------------
  1 | have     |             1
  3 | Kanban   |             3
  4 | have     |             7
  5 | TCP/IP   |             2
  6 | Function |             3
  2 | IP       |             6
(6 рядків)

postgres=# UPDATE word SET word = 'Asus'  WHERE  id = '5';
UPDATE 1
postgres=# select * from word;
 id |   word   | vocabulary_id
----+----------+---------------
  1 | have     |             1
  3 | Kanban   |             3
  4 | have     |             7
  6 | Function |             3
  2 | IP       |             6
  5 | Asus     |             2
(6 рядків)


postgres=# UPDATE word SET vocabulary_id = 27  WHERE  word = 'IP' AND id = 2;
UPDATE 1
postgres=#
postgres=# select * from word;
 id |   word   | vocabulary_id
----+----------+---------------
  1 | have     |             1
  3 | Kanban   |             3
  4 | have     |             7
  6 | Function |             3
  5 | Asus     |             2
  2 | IP       |            27
(6 рядків)


postgres=# UPDATE word SET word = 'NO'  WHERE  id = '5' OR  vocabulary_id = 3;
UPDATE 3
postgres=# select * from word;
 id | word | vocabulary_id
----+------+---------------
  1 | have |             1
  4 | have |             7
  2 | IP   |            27
  3 | NO   |             3
  6 | NO   |             3
  5 | NO   |             2
(6 рядків)


postgres=# UPDATE word SET vocabulary_id = id*21;
UPDATE 6
postgres=# select * from word;
 id | word | vocabulary_id
----+------+---------------
  1 | have |            21
  4 | have |            84
  2 | IP   |            42
  3 | NO   |            63
  6 | NO   |           126
  5 | NO   |           105
(6 рядків)

DELETE
Позволяет удалять с помощью команды DELETE строки из таблицы, представления и т. п. (На практике для 
любой нетривиальной команды DELETE потребуется также право SELECT, так как она должна обратиться 
к колонкам таблицы, чтобы определить, какие строки подлежат удалению.)

Синтаксис
DELETE FROM table
[WHERE conditions];

Параметры или аргументы
table
Таблица, из которой вы хотите удалить записи.
WHERE conditions
Необязательный. Условия, которые должны быть выполнены для удаления записей. Если никаких условий не предусмотрено, 
все записи в таблице будут удалены.

Примечание: Вам не нужно перечислять поля в операторе DELETE, так как вы удаляете всю строку из таблицы.
Если вы запустите оператор DELETE без условий в предложении WHERE, все записи из таблицы будут удалены. В результате 
вы чаще всего будете включать предложение WHERE, по крайней мере с одним условием, в свой оператор DELETE.
Вы можете иметь более одного условия в инструкции DELETE в SQL, используя либо условие AND, либо условие OR. 
Условие AND позволяет вам удалить запись, если все условия выполнены. Условие OR удаляет запись, если выполняется 
одно из условий.

postgres=# DELETE FROM word WHERE word = 'NO';
DELETE 3
postgres=# select * from word;
 id | word | vocabulary_id
----+------+---------------
  1 | have |            21
  4 | have |            84
  2 | IP   |            42
(3 рядки)

postgres=# DELETE FROM word WHERE vocabulary_id = '21';
DELETE 1
postgres=# select * from word;
 id | word | vocabulary_id
----+------+---------------
  4 | have |            84
  2 | IP   |            42
(2 рядки)


